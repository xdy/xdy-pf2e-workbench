{
  "xdy-pf2e-workbench": {
    "npcRoller": {
      "title": "NPC Roller",
      "button-label": "NPC Roller",
      "nav-labels": {
        "strike": "Strikes",
        "damage": "Damage",
        "ac": "Armor Class",
        "save": "Saves",
        "hp": "Hit Points",
        "spell": "Spell",
        "dc": "DCs",
        "areaDamage": "Area Damage",
        "perception": "Perception",
        "abilityScore": "Ability Scores",
        "skill": "Skills"
      }
    },
    "skillActions": {
      "Title": "Skill Actions",
      "Settings": {
        "Position": {
          "name": "Skill Actions position",
          "hint": "Position in the skill page; Top : right after Strikes, Bottom : At the end",
          "bottom": "Bottom",
          "disabled": "Disabled",
          "top": "Top"
        },
        "hideDuplicates": {
          "name": "Skill Actions hide duplicate actions",
          "hint": "Whether to hide duplicate actions in the action list or the skill action list",
          "doNotHide": "Do not hide",
          "hideActions": "Hide actions",
          "hideSkillActions": "Hide skill actions"
        },
        "IconStyle": {
          "name": "Skill Actions Icon Style",
          "hint": "Icon style on the skill; Action Cost Icon: For the actions cost icon, Skill Icon: For the skills icon if it's available",
          "actionCostIcon": "Action Cost Icon",
          "skillIcon": "Skill Icon"
        }
      },
      "UnequipAll": {
        "Tooltip": "Toggle hidden actions. Hold alt when clicking to make unequip/equip all skills."
      }
    },
    "spellCardNotFound": "The spell card could not be found. Casting {spell} at minimum level for that spell.",
    "effects": {
      "orcFerocityUsed": "Orc Ferocity Used",
      "bounceBackUsed": "Bounce Back Used",
      "numbToDeathUsed": "Numb To Death Used",
      "deliberateDeathUsed": "Deliberate Death Used"
    },
    "SETTINGS": {
      "mystificationSettings": {
        "hint": "Enable and configure NPC mystification",
        "name": "NPC Mystification Settings",
        "label": "Manage NPC Mystification Settings"
      },
      "automationClientSettings": {
        "hint": "Enable and configure automation for players",
        "name": "Client Automation Settings",
        "label": "Manage Client Automation Settings"
      },
      "automationWorldSettings": {
        "hint": "Enable and configure automation for GMs",
        "name": "World Automation Settings",
        "label": "Manage World Automation Settings"
      },
      "qolWorldSettings": {
        "hint": "Enable and configure quality of life settings for GMs",
        "name": "World QoL Settings",
        "label": "Manage World QoL Settings"
      },
      "remindersSettings": {
        "hint": "Enable and configure various reminders",
        "name": "Reminders Settings",
        "label": "Manage Reminders Settings"
      },
      "abpVariantAllowItemBonuses": {
        "hint": "Do not disable item bonuses when using ABP.",
        "name": "Do not disable item bonuses when using ABP."
      },
      "addGmRKButtonToNpc": {
        "hint": "Check to add Recall Knowlege button to NPCs. Currently only for the skill, lores will have to be handled manually.",
        "name": "Add Recall Knowledge button to NPCs.",
        "hideNpcName": "Hide NPC name on Recall Knowledge message.",
        "hideSkill": "Hide skill name on Recall Knowledge message."
      },
      "applyPersistentAllow": {
        "hint": "Select who is allowed to set the option to automatically apply persistent damage/healing. Save settings to show/hide additional options on the client automation setting menu.",
        "name": "Who is allowed to set the option to automatically apply persistent damage/healing.",
        "none": "None",
        "all": "All",
        "gm": "GM",
        "players": "Players"
      },
      "applyPersistentDamage": {
        "hint": "Client setting to automatically apply persistent damage rolled by the Persistent Damage module.",
        "name": "Automatically apply persistent damage rolled by the Persistent Damage module.",
        "wasDamaged": "{damage} damage was automatically applied"
      },
      "applyPersistentHealing": {
        "hint": "Client setting to automatically apply persistent healing rolled by the system. Save settings to show/hide additional options.",
        "name": "Automatically apply persistent healing rolled by the system.",
        "FastHealingLabel": "Received Fast Healing",
        "RegenerationLabel": "Received Regeneration",
        "wasHealed": "{healing} healing was automatically applied."
      },
      "applyEncumbranceBasedOnBulk": {
        "hint": "Automatically apply encumbrance based on bulk. (Uses system code which considers 5 bulk + 9 light to not exceed 5 bulk.)",
        "name": "Automatically apply encumbrance based on bulk."
      },
      "autoCollapseItemChatCardContent": {
        "hint": "Client setting to automatically collapse item chat card content.",
        "name": "Automatically collapse item chat card content.",
        "noCollapse": "Never collapse",
        "collapsedDefault": "Collapsed by default, click title to expand.",
        "nonCollapsedDefault": "Expanded by default, click title to collapse."
      },
      "autoExpandDamageRolls": {
        "hint": "Client setting to automatically expand damage rolls (foundry default is all damage rolls collapsed). Click dice roll to expand/collapse.",
        "name": "Automatically expand damage rolls.",
        "collapsedAll": "All damage rolls collapse (default foundry).",
        "expandedAll": "All damage rolls expand.",
        "expandedNew": "New damage rolls expand (also expands last three damage rolls on refresh).",
        "expandedNewest": "New damage rolls expand (also expands the very last damage roll on refresh)."
      },
      "autoRollDamageAllow": {
        "hint": "Select who is allowed to set the option to Autoroll damage on a hit. Save settings to show/hide additional options on the client automation setting menu.",
        "name": "Who is allowed to set the option to Autoroll damage on a hit.",
        "none": "None",
        "all": "All",
        "gm": "GM",
        "players": "Players"
      },
      "autoRollDamageForStrike": {
        "hint": "Client setting to autoroll damage for strikes that hit. Note that critical hits roll critical damage.",
        "name": "Autoroll damage for strikes that hit.",
        "strike": "Strike"
      },
      "autoRollDamageForSpellAttack": {
        "hint": "Client setting to autoroll damage for spell attacks that hit. Note that critical hits always roll normal damage.",
        "name": "Autoroll damage for spell attacks that hit."
      },
      "autoRollDamageForSpellNotAnAttack": {
        "hint": "Client setting to *always* autoroll normal damage for *non-attack* spells when they are cast.",
        "name": "Autoroll damage for cast spells that are not attacks."
      },
      "autoRollDamageNotifyOnSpellCardNotFound": {
        "hint": "Client setting to notify when a spell attack is rolled and no spell card was found to roll damage for.",
        "name": "Notify when a spell attack is rolled and no spell card was found."
      },
      "autoGainDyingAtZeroHP": {
        "hint": "Setting to automatically increase Dying at 0 HP.",
        "name": "Automatically increase Dying at 0 HP.",
        "no": "No",
        "addOne": "Add one",
        "addWoundedLevel": "Add 1 + Wounded level, for all",
        "addOneForCharacters": "Add one, for characters+familiars",
        "addWoundedLevelForCharacters": "Add 1 + Wounded level, for characters+familiars"
      },
      "giveUnconsciousIfDyingRemovedAt0HP": {
        "hint": "Setting to automatically give unconscious if Dying removed while at 0 HP.",
        "name": "Automatically give unconscious if Dying removed at 0 HP.",
        "no": "No"
      },
      "autoRemoveDyingAtGreaterThanZeroHP": {
        "hint": "Setting to automatically remove Dying when healed to above 0 HP.",
        "name": "Automatically remove Dying when healed to above 0 HP.",
        "no": "No",
        "removeDying": "Remove Dying for all",
        "removeDyingForCharacters": "Remove Dying, for characters+familiars"
      },
      "autoRemoveUnconsciousAtGreaterThanZeroHP": {
        "hint": "Setting to automatically remove unconscious if healed to greater than 0 HP.",
        "name": "Automatically remove unconscious if healed to greater than 0 HP."
      },
      "giveWoundedWhenDyingRemoved": {
        "hint": "Setting to automatically give Wounded condition when Dying condition is removed.",
        "name": "Automatically give Wounded when Dying is removed."
      },
      "decreaseFrightenedConditionEachTurn": {
        "hint": "Client setting to automatically decrease the frightened condition each turn for characters, npcs and familiars.",
        "name": "Automatically decrease the frightened condition each turn."
      },
      "enableAutomaticMove": {
        "hint": "Select to enable setting initiative of combatant outside it's own turn to just before the current combatant, normally because the current combatant has killed the selected combatant. Due to rounding several combatants may show the same initiative in the list.",
        "name": "Setting initiative to just before the current combatant.",
        "noAutomation": "Never",
        "reaching0HP": "When combatant reaches 0 HP."
      },
      "heroPointHandler": {
        "add": "Add",
        "addedFor": "1 Hero Point added for {name}",
        "addedToForAll": "{heroPoints} Hero Point(s) added for all",
        "addOne": "<b>Section 2</b> - Add one Hero Point to selected character from those logged in (defaults to random character when timer expires)",
        "all": "All",
        "defaultTimeoutMinutes": 60,
        "doWhat": "<b>Section 1</b> - Choose what to do to the Hero Points of <em>all</em> characters with the following value",
        "hint": "Check to enable Hero Point handler feature with an optional keybind to open a dialog that can reset or add Hero Points for all characters, add one Hero Point to a random (or selected) character and, most importantly, start a timer to make the dialog reappear after (by default) 60 minutes.",
        "ignore": "Nothing",
        "instructions": "Note that the timer is paused while this dialog is open. Close this dialog without pressing any of these buttons to unpause the timer, or press the appropriate button to do what the button says.",
        "minutesLeft": "minutes left on current timer",
        "name": "Enable Hero Point handler.",
        "none": "No character",
        "noRunningTimer": "No timer running",
        "noTimerLabel": "Submit changes with <b>no</b> timer. Will <b>stop</b> any existing timer.",
        "resetTo": "Reset to",
        "resetToForAll": "Hero Points reset to {heroPoints} for all",
        "showAfter": "Show dialog again after this many minutes",
        "startTimerLabel": "Submit changes and start/continue timer",
        "thisMany": "This many",
        "timerStopped": "Hero Points timer is stopped.",
        "timerValue": "Timer value (range 0-60)",
        "title": "Hero Point Handler",
        "willBeResetIn": "Hero Point Handler returns in {remainingMinutes} minutes ({time})."
      },
      "heroPointHandlerDefaultTimeoutMinutes": {
        "hint": "Set how many minutes till the next time the hero point handler opens.",
        "name": "Minutes between Hero Point Handler opening."
      },
      "heroPointHandlerKey": {
        "hint": "Keybind to open the Hero Point handler dialog that enables resetting and adding Hero Points with an hourly reminder",
        "name": "Keybind to open the Hero Point handler dialog."
      },
      "heroPointHandlerStartTimerOnReady": {
        "hint": "Check to automatically start the Hero Point handler timer when the game is ready.",
        "name": "Automatically start Hero Point Handler."
      },
      "callHotbarMacro": {
        "hint": "Call hotbar macro on page {page} position {column}",
        "name": "Call hotbar macro on page {page} position {column}"
      },
      "maxHeroPoints": {
        "hint": "World setting for the maximum number of Hero Points for a character.",
        "name": "(World) maximum number of Hero Points."
      },
      "moveBeforeCurrentCombatantContextMenu": {
        "name": "Move selected combatant before the current combatant."
      },
      "moveBeforeCurrentCombatantKey": {
        "hint": "World keybind for moving selected combatant to before the current combatant, normally because the current combatant has killed the selected combatant. Due to rounding several combatants may show the same initiative in the list.",
        "name": "(World) keybind to move selected combatant before current combatant."
      },
      "notifications": {
        "cantMystify": "You cannot mystify this token. Is it on the active scene, and, are you a GM?"
      },
      "npcMystifier": {
        "hint": "Check to enable npc mystifier, renaming tokens on the active scene based on their traits if Ctrl (configurable) is clicked when adding to scene. Save settings to show/hide additional options.",
        "name": "Enable npc mystifier."
      },
      "npcMystifierAddRandomNumber": {
        "hint": "Check to add a random number when mystifying npcs.",
        "name": "Add random number to name"
      },
      "npcMystifierDemystifyAllTokensBasedOnTheSameActor": {
        "hint": "Check to make all mystification act on all tokens based on the same actor.",
        "name": "Demystify all tokens of actor"
      },
      "npcMystifierUseAlignmentTraits": {
        "hint": "Check to use alignment traits in the mystified name.",
        "name": "Use npc alignment traits."
      },
      "npcMystifierBlacklist": {
        "hint": "Add words to filter out contents of this comma-separated blocklist from the mystified name.",
        "name": "Blocklist traits to never add"
      },
      "npcMystifierNoMatch": {
        "hint": "Text to use when no matching trait is found, so name would be empty. (Empty string here will be set to '...')",
        "name": "No match text"
      },
      "npcMystifierUseCreatureTraits": {
        "hint": "Check to use all 'creature traits' as defined in the pf2e system in the mystified name.",
        "name": "Use creature traits."
      },
      "npcMystifierUseCreatureTypesTraits": {
        "hint": "Check to use creature type traits (see https://2e.aonprd.com/Traits.aspx) in the mystified name.",
        "name": "Use creature type traits"
      },
      "npcMystifierUseEliteWeak": {
        "hint": "Check to use elite/weak in the mystified name.",
        "name": "Use elite/weak status"
      },
      "npcMystifierUseOtherTraits": {
        "hint": "Check to use all npc traits not already included by any of the above settings in the mystified name.",
        "name": "Use other traits"
      },
      "npcMystifierUseRarities": {
        "hint": "Check to use rarities in the mystified name.",
        "name": "Use rarity"
      },
      "npcMystifierUseRaritiesReplacement": {
        "hint": "Enter word to replace rarities greater than Common with (e.g. 'Unusual') in this text field. If empty, do not change the displayed rarity.",
        "name": "Replace rarities rarer than Common"
      },
      "npcMystifierKeepNumberAtEndOfName": {
        "hint": "Check to keep token number *in the same format as those added by this module* at end of name (if any) when mystifying/demystifying npcs.",
        "name": "Keep token number when mystifying/demystifying."
      },
      "npcMystifierModifierKey": {
        "hint": "Select to enable setting which key to hold to mystify creature as it's dragged out to the active scene. Note that if you choose Alt (not the default) it also hides the npc.",
        "name": "Key to mystify on drag to scene"
      },
      "npcMystifierMystifyKey": {
        "hint": "Set keybind to mystify selected tokens.",
        "name": "Keybind for mystifying selected tokens"
      },
      "npcMystifierPostfix": {
        "hint": "Add text to postfix new name with, defaults to '' (example: 'Creature'), if this matches the name of a rollable table a random text result from this table will be used as the postfix instead.",
        "name": "Word or rollable table postfix"
      },
      "npcMystifierPrefix": {
        "hint": "Add text to prefix new name with, defaults to '' (example: 'Unknown'), if this matches the name of a rollable table a random text result from this table will be used as the prefix instead.",
        "name": "Word or rollable table prefix"
      },
      "npcMystifierSkipRandomNumberForUnique": {
        "hint": "Check to skip adding a random number when mystifying unique npcs.",
        "name": "Skip random number for unique npcs."
      },
      "npcMystifierUseMystifiedNameInChat": {
        "hint": "(Experimental) Check to use mystified name inside chat messages by replacing the actor name with the mystified name.",
        "name": "(Experimental) Mystify name in chat messages."
      },
      "npcMystifierUseSize": {
        "hint": "Check to use the actor's size in the mystified name",
        "name": "Use actor size"
      },
      "creatureBuilder": {
        "hint": "Check to allow building custom creatures according to GMG rules.",
        "name": "Allow building custom creatures."
      },
      "npcScaler": {
        "hint": "Check to allow scaling NPCs",
        "name": "Allow scaling NPCs"
      },
      "npcRoller": {
        "hint": "Check to enable the NPC quick roller utility.",
        "name": "Enable NPC roller utility"
      },
      "reminderBreathWeapon": {
        "hint": "Check to set reminder for breath weapon use.",
        "name": "Breath weapon reminder",
        "prefix": "Recharge",
        "defaultName": "Breath",
        "used": "Used ",
        "source": "Breath Weapon reminder created by PF2e Workbench"
      },
      "reminderCannotAttack": {
        "hint": "Check to show reminder if attacking with a token that cannot attack due to being unconscious/dead/defeated/no hp/etc.",
        "name": "Reminder if attacking with token unable to attack",
        "petrified": "is petrified",
        "unconscious": "is unconscious",
        "dead": "is dead",
        "defeated": "is defeated",
        "hasNoHp": "has no hp",
        "note": "Are you sure about this attack? {actorName} {reason}, and thus not likely to be able to attack..."
      },
      "reminderCannotAttackIgnoreDeadEidolon": {
        "hint": "Check to allow eidolons that are dead/have no hp to attack without a reminder.",
        "name": "Eidolons can attack while dead"
      },
      "reminderIWR": {
        "hint": "Check to show reminder for IWR when damage is taken. Currently only handles 'simple' damage types (e.g. handles ones like 'Bludgeoning' or 'Fire', not ones like 'All' or 'Physical')",
        "name": "IWR reminder",
        "weakTo": " <strong>Weak</strong> to ",
        "resistantTo": " <strong>Resistant</strong> to ",
        "immuneTo": " <strong>Immune</strong> to ",
        "is": "{name} is"
      },
      "reminderTargeting": {
        "hint": "Check to show reminder for targeting in combat.",
        "name": "Targeting reminder",
        "note": "Please target before you attack."
      },
      "quickQuantities": {
        "hint": "Use shift-click on item quantities to add 5, ctrl-click to add 10.",
        "name": "Use shift-click on item quantities to add 5, ctrl-click to add 10."
      },
      "actionsReminderAllow": {
        "hint": "Check to show number of actions reminder as chat message.",
        "name": "Who gets an actions reminder",
        "none": "None",
        "all": "All",
        "gm": "GM",
        "players": "Players"
      },
      "autoReduceStunned": {
        "hint": "Client setting to automatically reduce Stunned on turn start.",
        "name": "Automatically reduce stunned on turn start"
      },
      "addUserTargets": {
        "hint": "Keybind to add selected and hovered tokens to the chosen user's targets.",
        "name": "Add user targets",
        "title": "Select user to add targets for",
        "addFor": "Add targets for",
        "clearFor": "Clear targets for"
      },
      "playerItemsRarityColour": {
        "hint": "Client setting to show item names in rarity colour on actor sheets.",
        "name": "Show item names in rarity colour on actor sheets."
      },
      "castPrivateSpell": {
        "hint": "Check to enabling ctrl-clicking Cast on a spell casts it, but the message is whispered to caster and GM.",
        "name": "Ctrl-click Cast to cast in private."
      },
      "castPrivateSpellWithPublicMessage": {
        "hint": "If casting privately, this setting also posts a public message that a spell has been cast UNLESS you hold SHIFT as well as CTRL while casting.",
        "name": "Post public message that a spell has been cast.",
        "cantrip": "Cantrip",
        "components": "Components:",
        "spell": "Spell",
        "they": "They",
        "firstPart": "{tokenName} just cast a {vsmf} {type} of the <strong>{traditionString}</strong> tradition",
        "secondPartRK": ".<br>Ask your GM if you recognized it automatically/with a reaction. If you didn't, you can spend an action on your turn to attempt to identify it: @Check[type:{skill}|dc:{dcRK}|traits:secret,action:recall-knowledge]{rk}",
        "secondPartNoRk": ".<br>Ask your GM if you recognized it automatically/with a reaction. If you didn't, ask your GM for the Recall Knowledge DC if you wish to spend an action on your turn to attempt to identify it.",
        "savePart": "<br>Save for the unknown spell is: @Check[type:{dataSave}|dc:{dataDC}]"
      },
      "castPrivateSpellWithPublicMessageShowTraits": {
        "hint": "Show spell traits in the public message.",
        "name": "Show spell traits in the public message.",
        "traitPart": " with these traits: <strong>{traits}</strong>"
      },
      "workbenchVersion": {
        "hint": "Version that the latest migration ran on. Can be lower than the module version. Don't modify this unless you know what you are doing.",
        "name": "Workbench migration version"
      }
    }
  }
}
